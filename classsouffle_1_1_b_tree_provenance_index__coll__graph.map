<map id="souffle::BTreeProvenanceIndex&lt; Arity &gt;" name="souffle::BTreeProvenanceIndex&lt; Arity &gt;">
<area shape="rect" id="node2" href="$classsouffle_1_1_generic_index.html" title="{souffle::GenericIndex\l\&lt; btree_set\&lt; t_tuple\l\&lt; Arity \&gt;, comparator\l\&lt; Arity \&gt;, std::allocator\l\&lt; t_tuple\&lt; Arity \&gt; \&gt;, 256,\l detail::default_strategy\l\&lt; t_tuple\&lt; Arity \&gt; \&gt;::type,\l comparator\&lt; Arity &#45; 2 \&gt;, Interpreter\lProvenanceUpdater\&lt; Arity \&gt; \&gt; \&gt;\n||+ clear()\l+ contains()\l+ contains()\l+ createView()\l+ empty()\l+ GenericIndex()\l+ getArity()\l+ insert()\l+ insert()\l+ partitionRange()\l+ partitionScan()\l+ range()\l+ scan()\l+ size()\l# bounds()\l}" alt="" coords="1009,1732,1269,2132"/>
<area shape="rect" id="node3" href="$classsouffle_1_1_interpreter_index.html" title="An index is an abstraction of a data structure. " alt="" coords="782,1387,961,1669"/>
<area shape="rect" id="node5" href="$classsouffle_1_1btree__set.html" title="{souffle::btree_set\l\&lt; t_tuple\&lt; Arity \&gt;,\l comparator\&lt; Arity \&gt;,\l std::allocator\&lt; t_tuple\l\&lt; Arity \&gt; \&gt;, 256, detail\l::default_strategy\&lt; t_tuple\l\&lt; Arity \&gt; \&gt;::type, comparator\l\&lt; Arity &#45; 2 \&gt;, InterpreterProvenanceUpdater\l\&lt; Arity \&gt; \&gt;\n||+ btree_set()\l+ btree_set()\l+ btree_set()\l+ btree_set()\l+ operator=()\l+ load()\l&#45; btree_set()\l}" alt="" coords="1155,1387,1465,1669"/>
<area shape="rect" id="node6" href="$classsouffle_1_1detail_1_1btree.html" title="{souffle::detail::btree\l\&lt; t_tuple\&lt; Arity \&gt;, comparator\l\&lt; Arity \&gt;, std::allocator\&lt;\l t_tuple\&lt; Arity \&gt; \&gt;, blockSize,\l detail::default_strategy\&lt; t_tuple\l\&lt; Arity \&gt; \&gt;::type, true, comparator\l\&lt; Arity &#45; 2 \&gt;, InterpreterProvenanceUpdater\&lt; Arity \&gt; \&gt;\n||+ begin()\l+ btree()\l+ btree()\l+ btree()\l+ btree()\l+ check()\l+ clear()\l+ contains()\l+ contains()\l+ empty()\land 23 more...\l+ load()\l# btree()\l# covers()\l# equal()\l# less()\l# update()\l# weak_covers()\l# weak_equal()\l# weak_less()\l&#45; coversUpperBound()\l&#45; buildSubTree()\l}" alt="" coords="1099,851,1484,1324"/>
<area shape="rect" id="node7" href="$structsouffle_1_1detail_1_1btree_1_1hint__statistics.html" title="{souffle::detail::btree\l\&lt; Key, Comparator, Allocator,\l blockSize, SearchStrategy,\l isSet, WeakComparator, Updater\l \&gt;::hint_statistics\n||}" alt="" coords="5,615,244,751"/>
<area shape="rect" id="node8" href="$classsouffle_1_1_cache_access_counter.html" title="cache hits/misses. " alt="" coords="19,233,230,413"/>
<area shape="rect" id="node9" href="$structsouffle_1_1detail_1_1default__strategy.html" title="{souffle::detail::default\l_strategy\&lt; t_tuple\&lt; Arity \&gt; \&gt;\n||}" alt="" coords="269,637,487,729"/>
<area shape="rect" id="node10" href="$structsouffle_1_1detail_1_1binary.html" title="{souffle::detail::binary\n||}" alt="" coords="298,285,458,362"/>
<area shape="rect" id="node11" href="$structsouffle_1_1detail_1_1strategy__selection.html" title="{souffle::detail::strategy\l_selection\&lt; binary_search \&gt;\n||}" alt="" coords="273,5,483,97"/>
<area shape="rect" id="node12" href="$structsouffle_1_1detail_1_1btree_1_1leaf__node.html" title="The data type representing leaf nodes of the b&#45;tree. " alt="" coords="512,615,751,751"/>
<area shape="rect" id="node13" href="$structsouffle_1_1detail_1_1btree_1_1node.html" title="The actual, generic node implementation covering the operations for both, inner and leaf nodes..." alt="" coords="656,175,951,472"/>
<area shape="rect" id="node14" href="$structsouffle_1_1detail_1_1btree_1_1base.html" title="The base type of all node types containing essential book&#45;keeping information. " alt="" coords="865,586,1158,781"/>
<area shape="rect" id="node19" href="$class_interpreter_provenance_updater_3_01_arity_01_4.html" title="{InterpreterProvenanceUpdater\l\&lt; Arity \&gt;\n||}" alt="" coords="1182,637,1401,729"/>
<area shape="rect" id="node20" href="$classsouffle_1_1_optimistic_read_write_lock.html" title="A &#39;sequential&#39; non&#45;locking implementation for an optimistic r/w lock. " alt="" coords="1425,579,1662,788"/>
<area shape="rect" id="node21" href="$structsouffle_1_1detail_1_1comparator.html" title="{souffle::detail::comparator\l\&lt; Arity &#45; 2 \&gt;\n||+ equal()\l+ less()\l+ operator()()\l}" alt="" coords="1686,623,1881,744"/>
<area shape="rect" id="node22" href="$structsouffle_1_1detail_1_1comparator.html" title="{souffle::detail::comparator\l\&lt; Arity \&gt;\n||+ equal()\l+ less()\l+ operator()()\l}" alt="" coords="1905,623,2099,744"/>
<area shape="rect" id="node23" href="$classsouffle_1_1_order.html" title="An order to be enforced for storing tuples within indexes. " alt="" coords="1515,1416,1639,1640"/>
</map>
